@page
@model RazorPages.Pages.Customers.IndexModel

@{
    ViewData["Title"] = "Index";
    var data = Model.Customer;
    var a = 0;
}

<p>
    <a class="custom-button add-customer-button" asp-page="Create">
        <span>Add Customer</span>
    </a>
</p>
<form method="get">
    <div class="form-group">
        <div class="input-group" style="width:400px;">
            <select name="sort" asp-for="@Model.CurrentSort" class="search_form_style" style="outline:none;max-width:150px" asp-items="ViewBag.Value"></select>
            &nbsp;&nbsp;
            <input type="search" class="form-control" style="width: 150px; border-radius: 0.25rem;" name="search" value="@Model.SearchTerm" />
            &nbsp;&nbsp;
            <span class="input-group-btn">
                <button class="button_container search-icon-container">
                    <img src="~/images/search-icon.svg" class="search-icon" />
                </button>
            </span>
        </div>
    </div>
</form>

@if (Model.Customer != null && Model.Customer.Count > 0)
{
    <div class="table-container">
        <div style="min-height:365px;">
            <div id="cust-header" class="table-list-header">
                <div>Name</div>
                <div>Contact</div>
                <div>Phone</div>
                <div>Email</div>
                <div>Action</div>
            </div>
            @foreach (var item in Model.Customer)
            {
                <div id="cust-content" class="table-list-content">
                    <div>
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </div>
                    <div>
                        @Html.DisplayFor(modelItem => item.CustomerContact)
                    </div>
                    <div>
                        @Html.DisplayFor(modelItem => item.CustomerPhone)
                    </div>
                    <div>
                        @Html.DisplayFor(modelItem => item.CustomerEmail)
                    </div>
                    <div>
                        <img id="action_image" src="~/images/action.svg" class="table-action-buttom" onclick="OpenAction(this)" data-assigned-id="@item.CustomerId" />
                        <div id="table-action-available-custId-@item.CustomerId" class="table-action-available" style="display:none;">
                            <div class="table-action-available-container">
                                <a class="table-tooltip" asp-page="./Edit" asp-route-id="@item.CustomerId">
                                    <span class="table-tooltiptext">Edit</span>
                                    <img src="~/images/edit-button.svg" class="table-action-available-buttom" />
                                </a>
                                <a class="table-tooltip" asp-page="./Details" asp-route-id="@item.CustomerId">
                                    <span class="table-tooltiptext">Details</span>
                                    <img src="~/images/detail-button.svg" class="table-action-available-buttom" />
                                </a>
                                <a class="table-tooltip" asp-page="./CustomerProjects" asp-route-id="@item.CustomerId">
                                    <span class="table-tooltiptext">Projects</span>
                                    <img src="~/images/task-button.svg" class="table-action-available-buttom" />
                                </a>
                                <a class="table-tooltip" asp-page="./Delete" asp-route-id="@item.CustomerId">
                                    <span class="table-tooltiptext">Delete</span>
                                    <img src="~/images/delete-button.svg" draggable="false" class="table-action-available-buttom" />
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

            }
        
        </div>
        @if (Model.Customer.TotalPages > 0)
        {
            <nav class="table-responsive">
                <ul class="custom-pagination">
                    @if (Model.Customer.PageIndex >= 1)
                    {
                        <li>
                            <a asp-page="./Index"
                               asp-route-sortOrder="@Model.CurrentSort"
                               asp-route-pageIndex="1"
                               asp-route-currentFilter="@Model.SearchTerm"
                               class="custom-pagination-list @(!Model.Customer.HasPreviousPage ? "disabled" : "")">
                                First
                            </a>
                        </li>
                        <span>&nbsp;</span>
                        <li>
                            <a asp-page="./Index"
                               asp-route-sortOrder="@Model.CurrentSort"
                               asp-route-pageIndex="@(Model.Customer.PageIndex - 1)"
                               asp-route-currentFilter="@Model.SearchTerm"
                               class="custom-pagination-list @(!Model.Customer.HasPreviousPage ? "disabled" : "")">
                                Prev
                            </a>
                        </li>
                    }

                    @for (var p = 1; p <= Model.Customer.TotalPages; p++)
                    {
                        <span>&nbsp;</span>
                        <li>
                            <a asp-page="./Index"
                               asp-route-sortOrder="@Model.CurrentSort"
                               asp-route-pageIndex="@p"
                               asp-route-currentFilter="@Model.SearchTerm"
                               class="custom-pagination-list @(p == Model.Customer.PageIndex ? "active" : "")">
                                @p
                            </a>
                        </li>
                    }

                    @if (Model.Customer.PageIndex <= Model.Customer.TotalPages)
                    {
                        <span>&nbsp;</span>
                        <li>
                            <a asp-page="./Index"
                               asp-route-sortOrder="@Model.CurrentSort"
                               asp-route-pageIndex="@(Model.Customer.PageIndex + 1)"
                               asp-route-currentFilter="@Model.SearchTerm"
                               class="custom-pagination-list @(!Model.Customer.HasNextPage ? "disabled" : "")">
                                Next
                            </a>
                        </li>
                        <span>&nbsp;</span>
                        <li>
                            <a asp-page="./Index"
                               asp-route-sortOrder="@Model.CurrentSort"
                               asp-route-pageIndex="@(Model.Customer.TotalPages)"
                               asp-route-currentFilter="@Model.SearchTerm"
                               class="custom-pagination-list @(!Model.Customer.HasNextPage ? "disabled" : "")">
                                Last
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
}
else
{
    <h4>No Record Found</h4>
}
<script type="text/javascript">
    function OpenAction(elem){
        var uid = $(elem).data('assigned-id');
        $('#table-action-available-custId-' + uid).slideToggle();
        var data = @Html.Raw(Json.Serialize(Model.Customer));
        data.forEach(ele => {
            //console.log(ele.customerId);
            //var b = ele.customerId != uid;
            //console.log(b);
            if (ele.customerId != uid) {
                var eid = '#table-action-available-custId-'.concat(ele.customerId);
                //console.log(eid);
                $(eid).slideUp();
            }
        });
    }
</script>