@page
@model RazorPages.Pages.Product.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h4>Product List</h4>

<form method="get">
    <div class="form-group">
        <div class="input-group">
            <input type="search" class="form-control" name="search" value="@Model.SearchTerm" style="border-top-right-radius: 0.25em; border-bottom-right-radius: 0.25em;" />
            &nbsp;&nbsp;
            <span class="input-group-btn">
                <button class="btn btn-outline-primary">
                    Search
                </button>
            </span>
        </div>
    </div>
</form>

<p>
    <a class="btn btn-outline-primary" asp-page="Create">Add New</a>
</p>
@if (@Model.ProductList != null && @Model.ProductList.Count > 0)
{
    <div style="height:365px;">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Name</th>
                    <th scope="col">UnitPrice</th>
                    <th scope="col">Category</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.ProductList)
                {
                    <tr>
                        <th scope="row">@product.Id</th>
                        <td>@product.Name</td>
                        <td>@product.UnitPrice</td>
                        <td>@product.Category.Name</td>
                        <td>
                            <a class="btn btn-outline-info"
                               asp-page="./Details"
                               asp-route-productId="@product.Id">
                                Details
                            </a>
                            <a class="btn btn-outline-success"
                               asp-page="./Edit"
                               asp-route-productId="@product.Id">
                                Edit
                            </a>
                            <a class="btn btn-outline-danger"
                               asp-page="./Delete"
                               asp-route-productId="@product.Id">
                                Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @if (Model.ProductList.TotalPages > 0)
    {
        <nav class="table-responsive">
            <ul class="pagination justify-content-center d-flex flex-wrap">
                @if (Model.ProductList.PageIndex >= 1)
                {
                    <li class="page-item">
                        <a asp-page="./Index"
                           asp-route-pageIndex="1"
                           asp-route-currentFilter="@Model.SearchTerm"
                           class="btn btn-outline-primary
                               @(!Model.ProductList.HasPreviousPage ? "disabled" : "")">
                            First
                        </a>
                    </li>
                    <span>&nbsp;</span>
                    <li class="page-item">
                        <a asp-page="./Index"
                           asp-route-pageIndex="@(Model.ProductList.PageIndex - 1)"
                           asp-route-currentFilter="@Model.SearchTerm"
                           class="btn btn-outline-primary
                               @(!Model.ProductList.HasPreviousPage ? "disabled" : "")">
                            Prev
                        </a>
                    </li>
                }

                @for (var p = 1; p <= Model.ProductList.TotalPages; p++)
                {
                    <span>&nbsp;</span>
                    <li class="page-item @(p == Model.ProductList.PageIndex ? "active" : "")">
                        <a asp-page="./Index"
                           asp-route-pageIndex="@p"
                           asp-route-currentFilter="@Model.SearchTerm"
                           class="btn btn-outline-primary">
                            @p
                        </a>
                    </li>
                }

                @if (Model.ProductList.PageIndex <= Model.ProductList.TotalPages)
                {
                    <span>&nbsp;</span>
                    <li class="page-item">
                        <a asp-page="./Index"
                           asp-route-pageIndex="@(Model.ProductList.PageIndex + 1)"
                           asp-route-currentFilter="@Model.SearchTerm"
                           class="btn btn-outline-primary
                               @(!Model.ProductList.HasNextPage ? "disabled" : "")">
                            Next
                        </a>
                    </li>
                    <span>&nbsp;</span>
                    <li class="page-item">
                        <a asp-page="./Index"
                           asp-route-pageIndex="@(Model.ProductList.TotalPages)"
                           asp-route-currentFilter="@Model.SearchTerm"
                           class="btn btn-outline-primary
                               @(!Model.ProductList.HasNextPage ? "disabled" : "")">
                            Last
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
}




