// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMvcApplication.DbC;

namespace WebMvcApplication.Migrations
{
    [DbContext(typeof(DBC))]
    partial class DBCModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerId");

                    b.Property<string>("CustomerContact")
                        .HasColumnType("longtext")
                        .HasColumnName("CustomerContact");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("longtext")
                        .HasColumnName("CustomerEmail");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext")
                        .HasColumnName("CustomerName");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("longtext")
                        .HasColumnName("CustomerPhone");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.PDescription", b =>
                {
                    b.Property<int>("PDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PDescriptionId");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("PCode")
                        .HasColumnType("longtext")
                        .HasColumnName("PCode");

                    b.HasKey("PDescriptionId");

                    b.ToTable("PDescriptions");
                });

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectId");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerId");

                    b.Property<int>("PD")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasColumnType("longtext")
                        .HasColumnName("ProjectName");

                    b.HasKey("ProjectId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.ProjectSkill", b =>
                {
                    b.Property<int>("ProjectSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectSkillId");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectId");

                    b.Property<int>("SD")
                        .HasColumnType("int");

                    b.HasKey("ProjectSkillId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Projectskills");
                });

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.SDescription", b =>
                {
                    b.Property<int>("SDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SDescriptionId");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("SCode")
                        .HasColumnType("longtext")
                        .HasColumnName("SCode");

                    b.HasKey("SDescriptionId");

                    b.ToTable("SDescriptions");
                });

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.Project", b =>
                {
                    b.HasOne("WebMvcApplication.Models.Mgmt.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.ProjectSkill", b =>
                {
                    b.HasOne("WebMvcApplication.Models.Mgmt.Project", "Project")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.Customer", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WebMvcApplication.Models.Mgmt.Project", b =>
                {
                    b.Navigation("ProjectSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
