@page
@model RazorPages.Pages.User.DisplayUserModel

@{
    ViewData["Title"] = "DisplayUser";
}

<h4>User List</h4>
<form method="get">
    <div class="form-group">
        <div class="input-group">
            <input type="search" class="form-control" asp-for="CurrentFilter" style="border-top-right-radius: 0.25em; border-bottom-right-radius: 0.25em;" />
            &nbsp;&nbsp;
            <span class="input-group-btn">
                <button class="btn btn-outline-primary">
                    Search
                </button>
            </span>
        </div>
    </div>
</form>
<p>
    <a class="btn btn-outline-primary" asp-page="AddUser">Add New</a>
</p>
@{
    var prevDisabled = !Model.UserDetails.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.UserDetails.HasNextPage ? "disabled" : "";
}
@{
    if (Model.UserDetails != null && Model.UserDetails.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.UserDetails[0].Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserDetails[0].Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserDetails[0].City)
                    </th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.UserDetails)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.City)
                        </td>
                        <td>
                            <a class="btn btn-outline-success" asp-page="./EditUser" asp-route-id="@item.Id">Edit</a>
                            <a class="btn btn-outline-info" asp-page="./UserDetail" asp-route-id="@item.Id">Details</a>
                            <a class="btn btn-outline-danger" asp-page="./DeleteUser" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (Model.UserDetails.TotalPages > 0)
        {
            <nav class="table-responsive">
                <ul class="pagination justify-content-center d-flex flex-wrap">
                    @if (Model.UserDetails.PageIndex >= 1)
                    {
                        <li class="page-item">
                            <a asp-page="./DisplayUser"
                               asp-route-pageIndex="1"
                               asp-route-currentFilter="@Model.CurrentFilter"
                               class="btn btn-outline-primary
                               @(!Model.UserDetails.HasPreviousPage ? "disabled" : "")">
                                First
                            </a>
                        </li>
                        <span>&nbsp;</span>
                        <li class="page-item">
                            <a asp-page="./DisplayUser"
                               asp-route-pageIndex="@(Model.UserDetails.PageIndex - 1)"
                               asp-route-currentFilter="@Model.CurrentFilter"
                               class="btn btn-outline-primary
                               @(!Model.UserDetails.HasPreviousPage ? "disabled" : "")">
                                Prev
                            </a>
                        </li>
                    }

                    @for (var p = 1; p <= Model.UserDetails.TotalPages; p++)
                    {
                        <span>&nbsp;</span>
                        <li class="page-item @(p == Model.UserDetails.PageIndex ? "active" : "")">
                            <a asp-page="./DisplayUser"
                               asp-route-pageIndex="@p"
                               asp-route-currentFilter="@Model.CurrentFilter"
                               class="btn btn-outline-primary">
                                @p
                            </a>
                        </li>
                    }

                    @if (Model.UserDetails.PageIndex <= Model.UserDetails.TotalPages)
                    {
                        <span>&nbsp;</span>
                        <li class="page-item">
                            <a asp-page="./DisplayUser"
                               asp-route-pageIndex="@(Model.UserDetails.PageIndex + 1)"
                               asp-route-currentFilter="@Model.CurrentFilter"
                               class="btn btn-outline-primary
                               @(!Model.UserDetails.HasNextPage ? "disabled" : "")">
                                Next
                            </a>
                        </li>
                        <span>&nbsp;</span>
                        <li class="page-item">
                            <a asp-page="./DisplayUser"
                               asp-route-pageIndex="@(Model.UserDetails.TotalPages)"
                               asp-route-currentFilter="@Model.CurrentFilter"
                               class="btn btn-outline-primary
                               @(!Model.UserDetails.HasNextPage ? "disabled" : "")">
                                Last
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <h4>No Record Found</h4>
    }
}

